name: ðŸ¤– QA

on:
  workflow_call:

jobs:
  codeql:
    name: CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: /language:python

  codacy:
    name: Codacy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          upload: true
  
  api-spec:
    name: OpenAPI
    runs-on: ubuntu-latest
    steps:
      - name: Fetch image artifact
        uses: actions/download-artifact@v4
        with:
          name: keystone-api-docker
          path: /tmp

      - name: Load image
        run: docker load --input /tmp/keystone-api.tar

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check file content
        run: |
          old_spec_path="docs/api.yml"
          old_spec_content=$(cat $old_spec_path)
          
          new_spec_path="new_spec.yml"
          docker run keystone-api spectacular --fail-on-warn > $new_spec_path
          new_spec_content=$(cat $new_spec_path)
          
          if [ "$old_spec_content" != "$new_spec_content" ]; then
            echo "OpenAPI specification is out of date: $old_spec_path"
            exit 1
          fi

  report-qa-status:
    name: Report QA Status
    runs-on: ubuntu-latest
    needs: [ codeql, codacy, api-spec ]
    if: always()

    steps:
      - name: Check QA status
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'skipped') || contains(needs.*.result, 'cancelled') }}
        run: exit 1
